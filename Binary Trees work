 #include <iostream>
#include <fstream>
#include <string>
using namespace std;
int Max = 0;
struct node{
    struct node*right;
    struct node*left;
    int data;
    int pos;
     node(int data, int pos) {
    this->data = data;
    this->pos = pos;
    left = right = NULL;
  }
};
void sortArray(node* rootNode, int(&arrayToSort)[] ){
   if(rootNode == NULL){
        Max += 1;
        return;
    }
    
    sortArray(rootNode->left, arrayToSort);
    rootNode->pos += Max;
    arrayToSort [rootNode->pos - 1 ] = rootNode->data;
    sortArray(rootNode->right, arrayToSort);
}
 
struct node* insertNode(node* newNode, int x){
    
        if(newNode == NULL){
            return new node(x, 0);
        }
        if(x < newNode->data){
            newNode->left = insertNode(newNode->left, x);
        }
        else  newNode->right = insertNode(newNode->right,  x);
        
        return newNode;
    

}
void insertArrayToTree(node* newNode, int array[], int size){
    if(size==0){
        return;
    }
    for(int i = 0; i < size; i ++){
        insertNode(newNode, array[i]);
    }
}
int main(){
    node* root;
    node* newNode;
    
    root = new node(12, 0);   
    
    int size = 14;
    int array[size] = {32, 2, 5,99, 23,54, 9, 4, 7, 98, 6, 1, 235, 1};
    insertArrayToTree(root, array, size);
    sortArray(root, array);
    
    cout << "\nSorted Array" << '\n';
    for(int i = 0; i <= size; i++){
        cout << array[i] << " ";
    }
    
}
